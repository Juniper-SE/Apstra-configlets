{
  "id": "791af6b6-0c85-4277-a949-c9faa443a91d",
  "ref_archs": [
    "two_stage_l3clos"
  ],
  "created_at": "2024-08-23T08:44:26.795475Z",
  "last_modified_at": "2024-08-23T08:44:26.795475Z",
  "display_name": "OISM-Server-Leaf",
  "generators": [
    {
      "config_style": "junos",
      "template_text": "{# OISM Configlet for Apstra 4.2 #}\n{# by Tony Chan <tonychan@juniper.net> #}\n{# https://www.juniper.net/documentation/us/en/software/junos/evpn-vxlan/topics/topic-map/oism-evpn-vxlan.html #}\n\n\n{# Enable OISM globally (common)#}\n{% if bgpService.evpn_uses_mac_vrf %}\nrouting-instances {\n    evpn-1 {\n{% endif %}        \n        forwarding-options {\n            multicast-replication {\n                evpn {\n                    irb oism;\n                }\n            }\n        }\n{% if bgpService.evpn_uses_mac_vrf %}\n    }\n}\n{% endif %}\n\n\n{# Config SBD IRB and PIM on all revenue interfaces of the associated VRF(common) #}\n{# SBD VLAN and IRB will be configured by Apstra virtual network constructs #}\n{% for v in (vlan |d({})).values() if v.get('name', '').endswith('-SBD') %}\n{% if loop.first %}\nrouting-instances {\n{% endif %}\n    {{ v.vrf_name }} {\n        protocols {\n            evpn {\n                oism {\n                    supplemental-bridge-domain-irb irb.{{ v.id }};\n                }\n            }\n            pim {\n                passive;\n                interface all;\n                interface irb.{{ v.id }} {\n                    accept-remote-source;\n                }\n            }\n            ospf {\n                area 0.0.0.0 {\n                    interface irb.{{ v.id }};\n                    interface {{ security_zones[v.vrf_name]['loopback_intf']}};\n                }\n            }\n        }\n    }\n{% if loop.last -%}\n}\n{% endif %}\n{% endfor %}\n\n{# Enable IGMP Snooping #}\n{% for v in (vlan |d({})).values() if v.get('name', '').endswith('-SBD') %}\n{% if loop.first %}\n{% if bgpService.evpn_uses_mac_vrf %}\nrouting-instances {\n    evpn-1 {\n{% endif %}\n        protocols {\n            igmp-snooping {\n{% endif %}\n{% for v1 in (vlan |d({})).values() if v1.get('vrf_name', '') == v['vrf_name'] and v1['impl_type'] == 'vxlan'%}\n                vlan vn{{ v1.id }} {\n                    proxy;\n                }\n{% endfor %}\n{% if loop.last %}\n            }\n        }\n{% if bgpService.evpn_uses_mac_vrf %}\n    }\n}\n{% endif %}\n{% endif %}\n{% endfor %}\n\n{# Enable IGMP  #}\n{% for v in (vlan |d({})).values() if v.get('name', '').endswith('-SBD') %}\n{% if loop.first %}\nprotocols {\n    igmp {\n{% endif %}\n{% for v1 in (vlan |d({})).values() if v1.get('vrf_name', '') == v['vrf_name'] and v1['impl_type'] == 'vxlan'%}\n        interface irb.{{ v1.id }};\n{% endfor %}\n{% if loop.last %}\n    }\n}\n{% endif %}\n{% endfor %}\n\n{# Enable install-star-g-routes on QFX10K and PTX (required)#}\n{# https://www.juniper.net/documentation/us/en/software/junos/evpn-vxlan/topics/topic-map/oism-evpn-vxlan.html #}\n{% if hcl.startswith('Juniper_QFX1000') or hcl.startswith('Juniper_PTX')%}\nmulticast-snooping-options {\n    oism {\n        install-star-g-routes;\n    }\n}\n{% endif %}\n\n{# Enable conserve-mcast-routes-in-pfe for QFX5130/QFX5700 (required)#}\n{# https://www.juniper.net/documentation/us/en/software/junos/evpn-vxlan/topics/topic-map/oism-evpn-vxlan.html #}\n{% if hcl.startswith('Juniper_QFX5130') or hcl.startswith('Juniper_QFX5700')%}\nmulticast-snooping-options {\n    oism {\n        conserve-mcast-routes-in-pfe;\n    }\n}\n{% endif %}",
      "section": "system",
      "negation_template_text": "",
      "filename": ""
    }
  ]
}